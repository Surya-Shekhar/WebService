//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ReadDILRecords.SalesDataService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SalesDetails_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/SalesDetails")]
    public partial class SalesDetails : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SalesDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Repl_CounterOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountersOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SalesDetails() {
            this.Url = global::ReadDILRecords.Properties.Settings.Default.ReadDILRecords_SalesDataService_SalesDetails;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SalesDataCompletedEventHandler SalesDataCompleted;
        
        /// <remarks/>
        public event Get_Repl_CounterCompletedEventHandler Get_Repl_CounterCompleted;
        
        /// <remarks/>
        public event CountersCompletedEventHandler CountersCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/SalesDetails:SalesData", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/SalesDetails", ResponseElementName="SalesData_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/SalesDetails", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalesData(int counter, ref string salesDetails) {
            object[] results = this.Invoke("SalesData", new object[] {
                        counter,
                        salesDetails});
            salesDetails = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SalesDataAsync(int counter, string salesDetails) {
            this.SalesDataAsync(counter, salesDetails, null);
        }
        
        /// <remarks/>
        public void SalesDataAsync(int counter, string salesDetails, object userState) {
            if ((this.SalesDataOperationCompleted == null)) {
                this.SalesDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesDataOperationCompleted);
            }
            this.InvokeAsync("SalesData", new object[] {
                        counter,
                        salesDetails}, this.SalesDataOperationCompleted, userState);
        }
        
        private void OnSalesDataOperationCompleted(object arg) {
            if ((this.SalesDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesDataCompleted(this, new SalesDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/SalesDetails:Get_Repl_Counter", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/SalesDetails", ResponseElementName="Get_Repl_Counter_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/SalesDetails", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public long Get_Repl_Counter([System.Xml.Serialization.XmlElementAttribute(DataType="date")] ref System.DateTime dateFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] ref System.DateTime dateTo) {
            object[] results = this.Invoke("Get_Repl_Counter", new object[] {
                        dateFrom,
                        dateTo});
            dateFrom = ((System.DateTime)(results[1]));
            dateTo = ((System.DateTime)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Repl_CounterAsync(System.DateTime dateFrom, System.DateTime dateTo) {
            this.Get_Repl_CounterAsync(dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void Get_Repl_CounterAsync(System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.Get_Repl_CounterOperationCompleted == null)) {
                this.Get_Repl_CounterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Repl_CounterOperationCompleted);
            }
            this.InvokeAsync("Get_Repl_Counter", new object[] {
                        dateFrom,
                        dateTo}, this.Get_Repl_CounterOperationCompleted, userState);
        }
        
        private void OnGet_Repl_CounterOperationCompleted(object arg) {
            if ((this.Get_Repl_CounterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Repl_CounterCompleted(this, new Get_Repl_CounterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/SalesDetails:Counters", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/SalesDetails", ResponseElementName="Counters_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/SalesDetails", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Counters([System.Xml.Serialization.XmlElementAttribute("counters")] int counters1) {
            this.Invoke("Counters", new object[] {
                        counters1});
        }
        
        /// <remarks/>
        public void CountersAsync(int counters1) {
            this.CountersAsync(counters1, null);
        }
        
        /// <remarks/>
        public void CountersAsync(int counters1, object userState) {
            if ((this.CountersOperationCompleted == null)) {
                this.CountersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountersOperationCompleted);
            }
            this.InvokeAsync("Counters", new object[] {
                        counters1}, this.CountersOperationCompleted, userState);
        }
        
        private void OnCountersOperationCompleted(object arg) {
            if ((this.CountersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SalesDataCompletedEventHandler(object sender, SalesDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string salesDetails {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Get_Repl_CounterCompletedEventHandler(object sender, Get_Repl_CounterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Repl_CounterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Repl_CounterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime dateFrom {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.DateTime dateTo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CountersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591